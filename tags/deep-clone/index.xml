<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Clone on Bigshans&#39; Blog</title>
    <link>https://bigshans.github.io/tags/deep-clone/</link>
    <description>Recent content in Deep Clone on Bigshans&#39; Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>bigshans</copyright>
    <lastBuildDate>Sun, 22 Aug 2021 14:52:42 +0800</lastBuildDate>
    <atom:link href="https://bigshans.github.io/tags/deep-clone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何写一个深拷贝函数</title>
      <link>https://bigshans.github.io/post/how-to-write-a-deep-copy-function/</link>
      <pubDate>Sun, 22 Aug 2021 14:52:42 +0800</pubDate>
      <guid>https://bigshans.github.io/post/how-to-write-a-deep-copy-function/</guid>
      <description>&lt;p&gt;跟小伙伴们讨论的时候发现，es6 的解构其实和 &lt;code&gt;Object.assign&lt;/code&gt; 一样属于是浅拷贝。那么一个深拷贝到底该怎么写呢？我个人阅读了一下 lodash 、 rambda 、 rfdc 的实现，发现思想其实都是一样，由于 rfdc 放弃了对一些内容的支持，使得它的速度飞快，但这些内容实际上我是需要的，所以 rfdc 不考虑。剩下两个实现思想基本上是一样的，但是 lodash 的实现内容很多，没有 rambda 简洁，所以我以 rambda 为蓝本自己写了一个深拷贝函数。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
